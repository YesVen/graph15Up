Why MVC
	Problem :
		JSP is terrible since it embeds your core business code into views
		Servlets are great in terms of seperation of business and view but messes terribly fails in presentation.
		Thus was born the Model 2 architecture MVC.
	Modal 1
	Modal 2
	Modal 3
	Modal 4
	
	

DispatcherServlet = Front Controller
		It is servlet container class that written by Spring designers to handle web request. The primary entry point for a Spring application is the DispatcherServlet. It acts as front controller class which does common things like copying data to bean, basic validation etc. It then forwards requst to individual controllers written by developer.
		Its written based on JSP modal 2.
		Its Front Controller Servlets
		
		
Is it mandatory to add .htm ass pattern for spring?
No but 99% people use it

HandlerMappingClasses 
	Its job is to identify the correct handlers for the incoming request.
	There are plenty of handlers available in spring.
	BeanNameUrlHandlerMapping :
			This class maps url based to bean which can handle this request
	

In annotation based configuration, we dont require handler mapping as we can directly annotate a method wrt request its serving.


@PathVariable

@RequestParam

@ModelAttribute as a method parameter annotation
		This makes a model bean auto populated. i.e. Automatic data binding

@ModelAttribute at method level annotation
		If you annotate a method with this annotation, then this method will be called for each and every method within this controller.
		Note this will be called first and then requestmapping method will be called. It also means that we can do some init work in such a method.
		
@ExceptionHandler
		This is used for exception handling in a controller and its default scope is limited to one controller. Means we have to add exception handlers for each and every controller separately.
		To make it applicable across the controllers use @ControllerAdvice

@ControllerAdvice
		It is common place to write the advices for all the controllers i the system.
		e.g. If we want a exception handling method to applied to all the controllers in the system then use this annotation
		
@responseBOdy
		USed as replacement of MOdelAndView
		Jackson jar takes care of conversion of data to ModelAndView Object




		
		
		
		
		
		