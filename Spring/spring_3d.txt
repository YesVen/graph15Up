Rod JohnSon

Use Spring tools suite IDE/eclipse plugin for spring developement *******************

As an alternative when everyone is struggling with heavy weight EJBs

Advantages:
		code in POJOS
		Dependancy injection (IoC)
		Lightweight
		
IoC is a general concept and it can be implemented in multiple ways. DI is just a flavour of IoC.
IoC says , "The application controls the framework, not the framework controls the application".
Even if you remove spring itself from the equation, your application still is decoupled. That much power spring puts in your app.


When to use xml configuration and when to use annotation configuration?
	one of the major disadvantage of annotation based aop is that it required your classes to be rebuild and it it turn involves rebuild, redeploy and restart server. So its advisible to use annotation based aop only when you are not making too much changes in your configuration.
	On other hand, xml based configuration is pretty hard to handle and creates a confusion. So need to make a concious decision.
	
	
Spring Container : 
	Bean Factory Container:
			Lightweight container
			e.g 	BeanFactory beanFactory = new XmlBeanFactory(new FileSystemResource("sweat/like/a/pro/setterinjection/spring.xml"));
					Triangle triangle = (Triangle) beanFactory.getBean("triangle");
			methods : 	Its fairly simple factory having just 6 methods
						containsBean, getBean, isSingleTon, getType etc.
				
	ApplicationContext Container : 
			Advanced sprint container having capabilities like publish Application Events,resolve textual messages.
			Includes all functionality of BeanFactory and used in Enterprise Applications.
			
			e.g.	ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
					Triangle triangle = (Triangle) context.getBean("triangle");
		
			
			
Bean factory vs Application conext.


ApplicationEventListner, ApplicationEventPublisher, ApplicationEvent, ApplicationEventPublisherAware

		