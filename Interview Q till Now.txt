AngularJs
	Angular Lifecycle
		Bootstrap phase :
			Angular components are initialized, dependencies are made available.
			angular is activated after static DOM onload is triggered by browser
		Compilation phase : 
			compile :run through the static DOM and execute the compile phase of all the angular components
			controller : run controller
			prelink :  run prelink function
			postlink : run postlink function
		Runtime phase : Update the UI	
		See G:\MyWork\Git\graph15Up\AngularJs\Angular V1\Hello World\Directives\DirectiveLifeCycle1.html
		
		
	Component Lifecycle : 
	
	How ng-repeat works internally
	
	
	How ng-repeat over directives work internally?
		@see : G:\MyWork\Git\graph15Up\AngularJs\Angular V1\Hello World\Directives\DirectiveLifeCycle2.html
	
	How to implement pagination in angular
	
	How many times compile is called while using directive in ng-repeat?
		Only once
		@see : G:\MyWork\Git\graph15Up\AngularJs\Angular V1\Hello World\Directives\DirectiveLifeCycle2.html
		
	What is difference between including script in head and body?
		good to have script at the end of body for good user experience but
		there is gotcha.
		You have to use ng-cloak, ng-bind in index.html only. If you use them in something like ng-include, it creates the problems.
		
		
	$q service : 
		Used to create a custom promise.
		function addNumbers(a,b){
		
			var q = $q.defer();
			//some async network call in between
			var result = someAsyncCall();
			if(result >=0){
				q.reject("Cannot fulfill the promise");
			}
			else{
				q.resolve(result);
			}
			//see what other properties are there on q object
			return q.promise;
		}
		
		addNumbers(10,2).then(function(result){
			//result code
		})
		.catch(function(error){
			//catch code
		})
		.finally(function(){
			//code to be executes irrespective of error or success
		});
			
		It has somme other methods as well.
		$q.all() -> Used when we are dealing with many async calls and we want to resolve all of them in one go. This is mainly used in scenarios where we are able to
			constructing a view only and only after all async calls are resolved.
			https://www.youtube.com/watch?v=104J7_HyaG4 -- beautiful explained
			The promise will be resolved only after the all the async calls in array are resolved.
			$q.all([async1,async2,async3]).then(values => {	
				//Things to do after all async calls resolved
			})
			.catch(error => {
				//error to handle
			});
			
		$q.race() -> Manage Race condition in independent async calls


	
	Why Promises : 
			traditional callback hells
			Similar to Future object in java
			Gives ability to chain the calls with Promise Design Pattern. Clean and crisp code.
			https://www.youtube.com/watch?v=104J7_HyaG4 -- beautiful explained
			
	
	
	factory vs service
		Service : 	Service is a constructor function. We refer service properties using this keyword.
					Somewhere deep inside of this Angular world, thereâ€™s this code that calls Object.create() with the service constructor function, when it gets instantiated. However, a factory function is really just a function that gets called, which is why we have to return an object explicitly.
		Factory : 	It is just another function which returns an object/string/closure/anything (not necessarily object). 
					Most importantly it can do some processing before returning object.
		
		Both are Singletons.
		@See : G:\MyWork\Git\graph15Up\AngularJs\Angular V1\factory vs service.PNG
	
	
	
	
	What is third parameter to setTimeout? 
	G:\MyWork\Git\graph15Up\Javascript\riddles\AlertTrick.html
	
	
	$setTimeout -> angular friendly settimeout implementation.
			Good thing is that it returns a promise
	
	Disadvantages of angular JS ? advantages?
		Not disadvantages but limitations
			2000 watchers - poorly designed system can overlook this
			digest cycle infinite loop
		
	Component? Component lifecycle hook?
		
	AngularJS best practices?	
	
	Sharing data between controllers
		event - emit and broadcast
		service that holds data to be injected in many controllers which want to share data
		
	Types of Angular Services?
		Service, Value, Constant, provider, factory
	
	
	Directive compile?
		This is phase of directive loading.
		Angular compiles all the directive in DOM using compile function. Once compilation phase "for all directives" is done, it runs the pre and post function for each directive.
		https://www.youtube.com/watch?v=FemQfKf03gY
		Post link is best place to modify the DOM.
	
Java
	Hashmap Rehashing-- why and how?
	Hashmap race condition
	
	What if I extend singleton class
		Since constructor is private, it will not be visible in extended class.
		So we will get compile error "Implicit super constructor DBConnection() is not visible for default constructor. Must define an explicit constructor"
	
	Which multithreading problem have you encountered?
	Heap dump, profiling? analyser...what approach have u used to solve?
		
	jdk 1.5 vs jdk 1.7 vs jdk 1.8 vs jdk 1.9? Which things introduced in which version?
	1.5 : Concurrent Collections, Generics, enhanced for loop, Reflection, Autoboxing etc.
	1.7 : Exception Handling improvements, try with resources
	1.8 : lambda expressions,stream support, default methods in interface, function expressions, nashorn js engine

	abstraction vs data hiding vs encapsulation
	Big O notation?
	
	Diff between String and StringBuilder? When to use what?
	
	ClassNotfoundException vs NoclassDefinitionFoundError?
			ClassNotfoundException : When we load class using Class.forName  and class is not found....
			
			NoclassDefinitionFoundError : The searched-for class definition existed when the currently  executing class was compiled, but the definition can no longer be found.			
			Class X has reference to class Y. When X is compiled Y definition was there. Now I am trying to load Y class fromX but Y definition is no more present.
			
	
	what is  big O notation?
		https://stackoverflow.com/questions/2307283/what-does-olog-n-mean-exactly
		https://stackoverflow.com/questions/1592649/examples-of-algorithms-which-has-o1-on-log-n-and-olog-n-complexities
	
Advanced java
			Servlet context vs Servlet Config
			
			
HTML5
	localstorage vs sessionStorage
	doctype vs modernizr
	Web Workers-- why and how?
	If I have huge data to be sent over network?--- json or serialization?
	How have you rendered the 3dxml file in browser?
	GWT?
	Math : Can we multiply matrix with vector?
	Push mechanism in browsers (not traditional pull)
	Gulp/Grunt/Bower tools?
	How to configure a project to be dependant on some other project in maven?
	In Tomcat How to ask it to look for some files in some specified directory?
	If I have huge data, will you use http protocol? ---> I answered as file protocol, blob 
	
Spring MVC
	Request processing lifecycle
	annotation-config vs component-scan
	
	
Javascript
	Why to use closures?
	Array.sum implementation
	Why to use Promises?
	Array.unshift?
	toString method on var o = {
									a : ["Dnyanesh","Ashu"],
									b : 3
							   }
							o.toString();
							o.a.toString();
	learn typeof tricks in js
	How many data types in js
	How to access variable outside IIFE?
	use strict?
	let keyword?
	implement oops concept in js
	
Congnizant Interview
	Why Generics introduces?
	Your application arch?
	Which synchronization issues have you came across?
	Race Condition in hashmap?
	Employee class to insert in treeset/treemap
	write closure?
	write singleton?
	Write executor framework?
	spring mvc flow?
	why closures are used?
	use java 8 to calculate sum of 100 numbers
	Callable
	How hashmap works? Hashmap resizing? Race condition?
	
	linkedList merging...find merging point
	LCM HCF code?
	Js Array operations?
	
	
Barclays Interview : 
		Future object in java?
		Why annotations are introduced?
		Every class has clone method inherited from object. Why do we need to override it while cloning?
		volatile vs final class
		ipage?
		@RestControllr?
		Callable?
		
One Network
	
	

VuClip
	Iterate over unlimited sequence of elements  10101010111101010001010101110.... in best possible way
			startr from middle and traverse in both ways at a time -- log(n/2)
			
	Advantages of spring - Write tight coupled code ?
	
	Web.xml interceptors vs filters
	js validator classes
	what is output of 
			function add(a,b){
					console.log(a+b);
			}
			function add(a,b,c){
					console.log(a+b+c);
			}
			add(1,2);
		
		
CreditSuisse : 
	How can we listen when application goes up or goes down	?
			ApplicatiobEventPublisher
			ApplicationContextAware
			ContextClosedEvent, ContextRefreshedEvent, and RequestHandledEvent
			
			

FIS :
	what is dandrum? __proto__ in js?
				When we use prototype, __proto__ is actually  used to look up the properties in prototype chain.
				Essentially, js designers have added __proto__ to be used internally but browser vendors have made it public.
				Ideally speaking, this property should never be touched in your app code.
				
	Diff between null and undefined?
				Both are data types. When a variable is created in js and no assigned its undefined.
				When we explicitly assign a variable to null then its null
				
	Multiple inheritance allowed in JavaScript?
	
	What are new features added in ECMA6?
	How Array is stored in js?
	How Spring context is loaded by application?
	Js Array Oprations?
	

Genpact : 
	How js array is able to store int and string and array in same object.
	Memory model of JS?
	
			
			
Synechron : 
	padding vs margin?
	How to achieve Responsive web design without bootstrap?
	If I want to store objects with insertion order preseve..? ---- LinkedHashmap
	Error Logging in Angular JS?
	Can a single route can have multiple controller?
	what is @Aspect? @Advice?
	
		
Persistent : 
	@UUID in webservices?		
	Top down vs bottom up web services?
	exception handling,method overriding broden scope?
	Class Level lock vs method Level Lock vs Object Level Lock?
	Deadlock vs LiveLock? How to avoid?
	How to detect memory leak? how to analyse it ? How to fix it?
	Write code to sort  a class based in multiple keys. Use comparator but I dont want to create too many comparators.
		Use comparisonStrategy field in Comparator and force user to set this field while calling Collections.sort() api.
		In compare method, check comparisonStrategy set by user and write login based on that.
	
	
Northern Trust :
	static vs volatile? are they same?
		static : Declaring a static variable in Java, means that there will be only one copy, no matter how many objects of the class are created. 
				If class Student has name, rollno and "static collegeName=GCEK" field. 
				 You create 100 objects of Student, all students have same copy of static field collegeName=GCEK.
				 Static is used in context of objects.
				 If two threads t1 and t2 are accessing static variable collegeName and t1 modifies it to "PCCOE", t2 might have cached value of collegeName nad it still will refer to "GCEK"
				 creating inconsistency. Volatile declaration makes sure that threads won't cache the data and uses the shared copy only.
		volatile : If class Student has name, rollno and "volatile collegeName=GCEK" field.
				   You create 100 objects of Student, Only a single copy will be created for collegeName field in all student objects.
				   Static is used in context of threads.
				   volatile declaration makes sure that threads won't cache the data and uses the shared copy only.
				   
	volatile vs immutable class?
	
	What is monitor?
	
	can a variable be final and volatile ?
		volatile only has relevance to modifications of the variable itself, not the object it refers to. It makes no sense to have a final volatile field because final fields cannot be modified. Just declare the field final and it should be fine.
	
	how to add dependency of other modules in npm ?
	
	what is package.json?
	
	Jmeter? ---- do some hands on
	
	XSS and CSRF?
	
	
Accenture :
	General example of asynchronous calls - He told me about setTimeout and setInterval
	
	
	
Incedo	:
		
	