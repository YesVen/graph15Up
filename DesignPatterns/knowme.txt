SingleTon
	"Ensure that a class has only one instace and provide global point of accessto it"
	Breaking Singleton : 
			Reflection
			Serialization/Deserilization
			Cloning
			Multi threaded Environment
			Multiple class loaders
			Garbage Collection : Prior to jdk1.2 version, GC is garbage collecting singleton
			
	Why Synchronised keyword cannot be used on getInstance()
	Why we cant move synchronized inside method?
	Why double checked lock is required ? Problem with double checking?
	Final Solution : make instance private static volatile
	Inner class to initialise object
	
	Josh Bloch : Use enum to create singleton as it OOT provides Reflection safety, thread safety, cloning safety, serialization safety for object.

Factory : 
		Creational
		Used to decouple object creation logic from implementation
			e.g Notebook doesnt need to know who is writing on it. It just need to know that whatever it may be, it can write. :)
	

Abstract Factory : 
				Creational
				Its called factory of factories.
				Its used when you want to create lot of factories within factory.
	
Factory Method : 
			Creational
			Here we are creating a composite complex object but we are delegating resposibility of creating individual small objects to subclasses.
			well explained @ https://en.wikipedia.org/wiki/Factory_method_pattern#Structure
			
			This us used when we want some kind of generic implementation in factory and let subclasses override any behavior if they want.
			e.g. Computer factory is creating computers with default CRT monitors. If you want to create computer with LCD monitor, please override method for getting monitor.
				Thats factory method design pattern.
				Note : we can keep factory method abstract(system dont know default monitor type) ot concrete(system makes CRT monitor be default) both. Its your choice. 

			Book definition : Defines an interface for creating an object, but let's the classes that implement the interface decide which class to instantiate. The Factory method lets a class defer instantiation to subclasses.
			
Builder : 	Creational
			Gang of Four :
			Silghtly twisted way : telusko
			
			https://howtodoinjava.com/design-patterns/creational/builder-pattern-in-java/
			